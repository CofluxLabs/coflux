on:
  push:
    # paths: [server/**]
    # branches: [main]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build_push:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version
        id: version
        run: |
          echo "version=$(cat server/VERSION)" >> "$GITHUB_OUTPUT"

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,enable=true,value=${{ steps.version.outputs.version }}
            type=raw,enable=true,value=latest

      - name: Check pushed
        id: pushed
        run: |
          set +e
          docker pull $(echo "${{ steps.meta.outputs.tags }}" | head -n 1 | tr -d '\n')
          echo "pushed=$(if [ $? -eq 0 ]; then echo "true"; else echo "false"; fi)" >> "$GITHUB_OUTPUT"

      - name: Build/push image
        uses: docker/build-push-action@v5
        with:
          context: server
          push: ${{ steps.pushed.outputs.pushed == 'false' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Release
        if: steps.pushed.outputs.pushed == 'false'
        env:
          VERSION: ${{ steps.version.outputs.version }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create clients/python/$VERSION \
            --title "Server ($VERSION)"
